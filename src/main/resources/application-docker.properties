# ==================================================================================================================
# 						APP CONFIG
# ==================================================================================================================
server.address=0.0.0.0
server.port=8084

# ==================================================================================================================
# 					LOGGING CONFIG - SPRING BOOT
# ==================================================================================================================
logging.level.root=INFO
logging.level.br.com.ramiralvesmelo.util=ERROR
logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n
logging.file.name=/tmp/logs/util.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %logger{36} - %msg%n
# MogoDB
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG
logging.level.org.springframework.security=INFO
logging.level.org.mongodb.driver.cluster=ERROR
logging.level.org.mongodb.driver.connection=ERROR
logging.level.org.mongodb.driver.client=ERROR
# ==================================================================================================================
# 						KAFKA - BROKER
# ==================================================================================================================
# Endereco do(s) broker(s)
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:29092}

# ==================================================================================================================
# 						KAFKA - TOPICO / PUBLISH
# ==================================================================================================================
# Nome do topico de finalizacao de pedidos
app.kafka.topic.order-finalized=orders.finalized
app.kafka.topic.audit-log-event=audit-log-event

# Producer (String key + JSON value)
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Inclui type headers (FQN da classe no payload necessario para desserializacao no consumer)
#spring.kafka.producer.properties.spring.json.add.type.headers=true

# ==================================================================================================================
# 						KAFKA - CONSUMER / SUBSCRIBE
# ==================================================================================================================
# ATENÇÃO!!! Cada aplicativo que precisa receber a mesma mensagem DEVE ter um group-id diferente
spring.kafka.consumer.group-id=app-audit
# Reinicia leitura do inicio caso nao haja offset salvo
spring.kafka.consumer.auto-offset-reset=earliest
# Consumer (String key + JSON value)
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# Confia nos type headers enviados pelo Producer
spring.kafka.consumer.properties.spring.json.use.type.headers=true
# Pacote(s) permitido(s) para desserializar os eventos
spring.kafka.consumer.properties.spring.json.trusted.packages=br.com.ramiralvesmelo.util.message.event
# ==================================================================================================================
# 						KAFKA - LISTENER / ADMIN
# ==================================================================================================================
# Inicia automaticamente os listeners
spring.kafka.listener.auto-startup=true
# Nao cria topicos automaticamente (p/ producao)
spring.kafka.admin.auto-create=false
# ==================================================================================================================
#                                      MongoDB
# ==================================================================================================================
# Nome do banco de dados
spring.data.mongodb.database=auditdb
# URI de conexão (com usuário/senha caso configurados no docker-compose)
spring.data.mongodb.uri=mongodb://mongoadmin:mongopass@monogodb:27017/auditdb?authSource=admin
# Habilita criação automática de índices definidos nas entidades @Document
spring.data.mongodb.auto-index-creation=true
# Pool de conexões
spring.data.mongodb.socket-timeout=3000
spring.data.mongodb.connect-timeout=3000
# Logs de queries MongoDB (útil em dev)

# === DESATIVAR AUTO-CONFIG DE JDBC/JPA (causa raiz do erro) ===
spring.autoconfigure.exclude=\
org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\
org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\
org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\
org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\
org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration

